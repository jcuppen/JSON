module JSONBuilder;

use JSONObject: all;
use String: {string};
use Terminal: {TheTerminal};

export all;

external JSONObject createJSONObject();
	#pragma linkname "create_object"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [0]
external JSONObject createJSONArray();
	#pragma linkname "create_array"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [0]

// Booleans
external void setBool( JSONObject& object, string key, bool boolean);
	#pragma linkname "set_bool"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [1, 2, 3]

external void setTrue( JSONObject& object, string key);
	#pragma linkname "set_true"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [1, 2]

external void setFalse( JSONObject& object, string key);
	#pragma linkname "set_false"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [1, 2]

// Numbers
external void setInt( JSONObject& object, string key, int value);
	#pragma linkname "set_int"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [1, 2, 3]
external void setFloat( JSONObject& object, string key, float value);
	#pragma linkname "set_float"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [1, 2, 3]
external void setDouble( JSONObject& object, string key, double value);
	#pragma linkname "set_double"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [1, 2, 3]

// String
external void setString( JSONObject& object, string key, string value);
	#pragma linkname "set_string"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [1, 2, 3]

external void serializeJSONObject( JSONObject& object);
	#pragma effect TheTerminal
	#pragma linkname "serialize_object"
	#pragma linkobj "src/JSONBuilder/json_builder.o"
	#pragma linksign [1]
